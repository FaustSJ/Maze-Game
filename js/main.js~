
//http://wonderdeep.github.io/digital-template/index.html
//creates the playing screen
var game = new Phaser.Game(768, 2048, Phaser.CANVAS, 'game', { preload: preload, create: create, update: update, render: render });

function preload() {

    game.load.tilemap('level1', 'assets/level1.json', null, Phaser.Tilemap.TILED_JSON);
    game.load.image('tiles-1', 'assets/tiles-1.png');
    game.load.spritesheet('cat', 'assets/cat.png', 32, 48);
    game.load.image('background', 'assets/levelBack.png');
    game.load.image('portal', 'assets/Exit.png');

}

var map;
var tileset;
var layer;
var player;
var facing = 'right';
var jumpTimer = 0;
var cursors;
var bg;
var spawnTimer = 0;
var stateText;
var portal;


function create() {

    game.physics.startSystem(Phaser.Physics.ARCADE);

    bg = game.add.sprite(0, 0,'background');
    bg.fixedToCamera = false;

    map = game.add.tilemap('level1');
    map.addTilesetImage('main','tiles-1');
    map.setCollisionByExclusion([ 13, 14, 15, 16, 46, 47, 48, 49, 50, 51 ]);
    layer = map.createLayer('Tile Layer 1');
    //Un-comment this on to see the collision tiles
    //layer.debug = true;

    layer.resizeWorld();   
    
    //the goal or portal
    portal = game.add.sprite(50,152, 'portal');
    game.physics.enable(portal, Phaser.Physics.ARCADE);
    
    //the cat
    player = game.add.sprite(394, 10, 'cat');
    game.physics.enable(player, Phaser.Physics.ARCADE);

    player.body.bounce.y = 0.2;
    player.body.gravity.y = 250;
    player.body.collideWorldBounds = true;
    player.body.setSize(20, 32, 5, 16);

    player.animations.add('left', [0, 1, 2, 3], 10, true);
    player.animations.add('turn', [4], 20, true);
    player.animations.add('right', [5, 6, 7, 8], 10, true);

    game.camera.follow(player);

    cursors = game.input.keyboard.createCursorKeys();
    this.wasd = {
                up: game.input.keyboard.addKey(Phaser.Keyboard.W),
                down: game.input.keyboard.addKey(Phaser.Keyboard.S),
                left: game.input.keyboard.addKey(Phaser.Keyboard.A),
                right: game.input.keyboard.addKey(Phaser.Keyboard.D),
            };

}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
function update() {

    game.physics.arcade.collide(player, layer);

    player.body.velocity.x = 0;

    if (game.input.activePointer.isDown)
    {
        fire();
    } 
        
    //moves and animates the player moving left
    if (this.wasd.left.isDown)
    {
        player.body.velocity.x = -150;

        if (facing != 'left')
        {
            player.animations.play('left');
            facing = 'left';
        }
    }
    
    //moves and animates the playermoving right
    else if (this.wasd.right.isDown)
    {
        player.body.velocity.x = 150;

        if (facing != 'right')
        {
            player.animations.play('right');
            facing = 'right';
        }
    }
    else
    {
    	//halts animation and stops movement when idle
        if (facing != 'idle')
        {
            player.animations.stop();

            if (facing == 'left')
            {
                player.frame = 0;
            }
            else
            {
                player.frame = 5;
            }

            facing = 'idle';
        }
    }
    
    //makes the sprite jump, but only if the player in touching the ground
    if (this.wasd.up.isDown && player.body.onFloor() && game.time.now > jumpTimer)
    {
        player.body.velocity.y = -250;
        jumpTimer = game.time.now + 750;
    }
    
    game.physics.arcade.overlap(player, portal, winning, null, this);

}

function moveGhost (ghosts) { 
     accelerateToObject(ghosts,player,30);  //start accelerateToObject on every ghost
}


function render () {

    // game.debug.text(game.time.physicsElapsed, 32, 32);
    // game.debug.body(player);
     game.debug.bodyInfo(player, 16, 24);

}

//you win
function winning (player, portal)
{
	player.kill();
	
	stateText = game.add.text(player.x+100,player.y,' ', { font: '20px Arial', fill: '#fff' });
        stateText.anchor.setTo(0.5, 0.5);
	stateText.text="You made it to the portal! \n Who is on the other side I wonder? \n To Be Continued. \n Click to play again!";
        stateText.visible = true;
}

function restart ()
{
	player.reset(40, 935);
	stateText.visible = false;
}

